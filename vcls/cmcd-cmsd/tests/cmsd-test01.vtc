varnishtest "happy path, one URL"

server s1 {
	rxreq
	expect req.url == "/abc"
	expect req.http.host == "foo"
	txresp -hdr "CMSD-Static: nor=def"

	rxreq
	expect req.url == "/with/a/few/levels/ghi"
	expect req.http.host == "bar"
	txresp -hdr "CMSD-Static: nor=/another/set/of/directories/jkl"

	rxreq
	expect req.url == "/with/a/few/levels/but/ending/with/a/slash/"
	expect req.http.host == "baz"
	txresp -hdr "CMSD-Static: nor=mno"
} -start

server s2 {
	rxreq
	expect req.url == "/def"
	expect req.http.host == "foo"
	txresp
} -start

server s3 {
	rxreq
	expect req.url == "/another/set/of/directories/jkl"
	expect req.http.host == "bar"
	txresp
} -start

# this one triggers another prefetch
server s4 {
	rxreq
	expect req.url == "/with/a/few/levels/but/ending/with/a/slash/mno"
	expect req.http.host == "baz"
	txresp -hdr "CMSD-Static: nor=and/some/extra/directories/pqr" 
} -start


server s5 {
	rxreq
	expect req.url == "/with/a/few/levels/but/ending/with/a/slash/and/some/extra/directories/pqr"
	expect req.http.host == "baz"
	txresp
} -start

server sErr {
	rxreq
	expect req.url == "you shouldn't be here"
} -start

varnish v1 -vcl+backend {
	include "${testdir}/cmsd.vcl";

	sub vcl_recv {
		if (req.url == "/abc" ||
		    req.url == "/with/a/few/levels/ghi" ||
		    req.url == "/with/a/few/levels/but/ending/with/a/slash/") {
			set req.backend_hint = s1;
		} else if (req.url == "/def") {
			set req.backend_hint = s2;
		} else if (req.url == "/another/set/of/directories/jkl") {
			set req.backend_hint = s3;
		} else if (req.url == "/with/a/few/levels/but/ending/with/a/slash/mno") {
			set req.backend_hint = s4;
		} else if (req.url == "/with/a/few/levels/but/ending/with/a/slash/and/some/extra/directories/pqr") {
			set req.backend_hint = s5;
		} else {
			set req.backend_hint = sErr;
		}
	}
} -start

varnish v1 -cliok "param.set debug +syncvsl"

client c1 {
	txreq -url "/abc" -hdr "host: foo"
	rxresp

	txreq -url "/with/a/few/levels/ghi" -hdr "host: bar"
	rxresp

	txreq -url "/with/a/few/levels/but/ending/with/a/slash/" -hdr "host: baz"
	rxresp
} -run

server s2 -wait
server s3 -wait
server s4 -wait
server s5 -wait
